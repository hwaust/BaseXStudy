// Begin part.
#! /bin/bash
# shutdown pc
sudo shutdown +1

give rights.
$ chmod 777 test.sh


How can I pass a command line argument into a shell script?

I know that shell scripts just run commands as if they were executed in at the
command prompt. I'd like to be able to run shell scripts as if they were
functions... That is, taking an input value or string into the script. How do I
approach doing this?


Q1: The shell command and any arguments to that command appear as numbered shell
variables: $0 has the string value of the command itself, something like script,
./script, /home/user/bin/script or whatever. Any arguments appear as "$1", "$2",
"$3" and so on. The count of arguments is in the shell variable "$#".

Common ways of dealing with this involve shell commands getopts and shift.
getopts is a lot like the C getopt() library function. shift moves the value of
$2 to $1, $3 to $2, and so on; $# gets decremented. Code ends up looking at the
value of "$1", doing things using a caseâ€¦esac to decide on an action, and then
doing a shift to move $1 to the next argument. It only ever has to examine $1,
and maybe $#.

Q2: You can access passed arguments with $n where n is the argument number - 1,
2, 3, .... You pass the arguments just like you would with any other command.

$ cat myscript
#!/bin/bash
echo "First arg: $1"
echo "Second arg: $2"
$ ./myscript hello world
First arg: hello
Second arg: world
